/*Create a Java program for an E-commerce Order Management System that demonstrates the four pillars of OOP:
1. Abstraction – Create an abstract class Product with attributes like name and price, and an abstract method calculateDiscount().
2. Encapsulation – Keep product details (name, price) private and provide getters and setters.
3. Inheritance – Create subclasses Electronics, Clothing, and Grocery that extend Product.
4. Polymorphism – Implement different discount logic in each subclass:
Electronics → 10% discount
Clothing → 20% discount
Grocery → 5% discount*/

package com.ecom;

abstract class Product{
	private String name;
	private int price;
	
	public abstract void calculateDiscount(double price);
	
	
	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	
	public void setPrice(int price) {
		this.price = price;
	}
	

	public int getPrice() {
		return price;
	}

}

class Electronics extends Product{
	
	public void calculateDiscount(double price) {
		double discountPrice=(price*0.1);
		System.out.println("Electronics Discount Price From Your Order:"+discountPrice);
		
		
		
         double afterDisPrice=price-discountPrice;
		
		System.out.println("After Discount Price:"+afterDisPrice);
		
		System.out.println();
	}
	
}

class Clothing extends Product{
		public void calculateDiscount(double price) {
			double discountPrice=(price*0.2);
			System.out.println("Clothing Discount Price From Your Order:"+discountPrice);
			
			
			
			double afterDisPrice=price-discountPrice;
			
			System.out.println("After Discount Price:"+afterDisPrice);
			
			System.out.println();
			
		}
}

class Grocery extends Product{
	public void calculateDiscount(double price) {
		double discountPrice=(price*0.05);
		System.out.println("Grocery Discount Price From Your Order:"+discountPrice);
		
		double afterDisPrice=price-discountPrice;
		
		System.out.println("After Discount Price:"+afterDisPrice);
		
	}
}




public class Ecommerce {
	public static void main(String[] args) {
		
		System.out.println("------E-commerce Order Management System------");
		System.out.println();
		
		Electronics e=new Electronics();
		e.calculateDiscount(100);
		
		Clothing c=new Clothing();
		c.calculateDiscount(100);
		
		Grocery g=new Grocery();
		g.calculateDiscount(100);
	}
}
